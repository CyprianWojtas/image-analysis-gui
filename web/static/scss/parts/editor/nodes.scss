.nodeEditor .node
{
	position: absolute;
	box-sizing: border-box;
	background: #444;
	border-radius: 6px;
	box-shadow: 0 0 1rem #0008;
	display: block;
	white-space: nowrap;

	&.processed
	{
		outline: 2px solid #8afa;
	}
	&.processing
	{
		outline: 2px solid #ff0a;
		animation: nodeProcessing 1.5s infinite alternate;
	}

	.nodeTitle
	{
		background: var(--node-colour, #333);
		background-image: linear-gradient(#fff1, #0001);
		padding: 5px 20px 5px 10px;
		border-radius: 6px 6px 0 0;
		grid-column: 1 / -1;
		user-select: none;
		cursor: grab;
		position: relative;
		overflow: hidden;
		text-overflow: ellipsis;

		.buttons
		{
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			padding: 0.375rem;
			padding-left: 2.5rem;
			opacity: 0;
			transition: 0.2s opacity;
			display: flex;
			gap: 0.5rem;
			align-items: center;
			background: var(--node-colour, #333);
			background-image: linear-gradient(#fff1, #0001);
			border-top-right-radius: 6px;
			mask-image: linear-gradient(to right, #0000 0, #000 2rem);

			button
			{
				background: var(--node-colour, #888);
				background-image: linear-gradient(#fff3, #fff3);
				filter: contrast(1.1) brightness(1.5);
  				color: #0008;

				&:hover,
				&:focus
				{
					background: #fff;
					color: #000;
				}

				&.btn-close:hover,
				&.btn-close:focus
				{
					background: #f00;
					color: #fff;
				}
			}
		}
	}

	&:hover .nodeTitle .buttons
	{
		opacity: 1;
	}

	.nodeDragged#{&} .nodeTitle .buttons,
	.variableDragged#{&} .nodeTitle .buttons
	{
		opacity: 0;
	}


	.nodeContents
	{
		padding: 10px;
		display: grid;
		gap: 0 1rem;
		justify-content: space-between;
		grid-template-columns: repeat(2, auto);
		align-items: center;
		box-shadow: inset 0 2rem 2rem -2rem #0004;
	}

	.nodeInput
	{
		margin-left: -10px;
		padding-left: 10px;
	}

	.nodeOutput
	{
		text-align: right;
		margin-right: -10px;
		padding-right: 10px;
	}

	.nodeInput,
	.nodeOutput
	{
		position: relative;
		font-size: 11px;
		user-select: none;
		cursor: grab;

		.handle
		{
			content: "";
			display: block;
			width: 8px;
			height: 8px;
			background: #666;
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
			border-radius: 100%;
			user-select: none;
			transition: 0.2s filter, 0.2s box-shadow;
		}
	}

	@at-root
	.variableDragged#{&} .nodeInput .handle,
	.variableDragged#{&} .nodeOutput .handle
	{
		filter: brightness(0.5);
	}

	@at-root
	.variableDragged#{&} .nodeInput.connected .handle
	{
		filter: brightness(0.5) !important;
		box-shadow: none !important;
	}

	@at-root
	.variableDragged#{&} .nodeInput.dragged .handle,
	.variableDragged#{&} .nodeOutput.dragged .handle
	{
		filter: none;
	}

	.nodeInput .handle
	{
		left: -4px;
	}

	.nodeOutput .handle
	{
		right: -4px;
	}

	input,
	textarea
	{
		background: #555;
		color: #fff;
		border: none;
		border-bottom: 1px solid #fff6;
		font-family: inherit;
		font-size: 1.1rem;
		padding: 0.25rem 0.5rem;
		box-sizing: border-box;
	}
	input[type="number"]
	{
		-moz-appearance: textfield;
	}

	input[type="number"]::-webkit-outer-spin-button,
	input[type="number"]::-webkit-inner-spin-button
	{
		-webkit-appearance: none;
		margin: 0;
	}

	textarea
	{
		min-width: 6rem;
		min-height: 2.1rem;
	}

}

@keyframes nodeProcessing
{
	0%
	{
		box-shadow: 0 0 0.5rem #ff0a;
	}
	100%
	{
		box-shadow: 0 0 1.5rem #ff0a;
	}
}