html
{
	font-size: 12px;
}

body
{
	margin: 0;
	background-color: #bbb;
	color: #000;
	font-family: sans-serif;
	line-height: 1.25;
}

.nodeEditor .nodesBox
{
	display: grid;
	overflow: hidden;
	background:
		repeating-linear-gradient(#0001, #0001 1px, #0000 1px, #0000 1.5rem),
		repeating-linear-gradient(90deg, #0001, #0001 1px, #0000 1px, #0000 1.5rem);
	background-size: 1.5rem 1.5rem;
	background-position: var(--background-position, 0px 0px);
}

.nodeEditor canvas,
.nodeEditor .nodeContainer
{
	grid-column: 1 / 2;
	grid-row: 1 / 2;
}

.nodeEditor .nodeContainer
{
	position: relative;
}

.nodeEditor canvas
{
	filter: drop-shadow(0 0 1rem #0004);
}

.nodeEditor .node
{
	position: absolute;
	width: 200px;
	box-sizing: border-box;
	padding: 10px;
	background: #fff;
	border-radius: 6px;
	box-shadow: 0 0 1rem #0002;
	display: grid;
	grid-template-columns: 1fr 1fr;
}

.nodeEditor .node .nodeTitle
{
	margin: -10px -10px 10px;
	background: #eee;
	padding: 5px 10px;
	border-radius: 6px 6px 0 0;
	grid-column: 1 / -1;
	cursor: default;
	user-select: none;
}

.nodeEditor .node .nodeInput,
.nodeEditor .node .nodeOutput
{
	position: relative;
	font-size: 11px;
	user-select: none;
	cursor: grab;
}

.nodeEditor.variableDragged,
.nodeEditor.variableDragged *
{
	cursor: grabbing !important;
}

.nodeEditor .node .nodeInput
{
	margin-left: -10px;
	padding-left: 10px;
}

.nodeEditor .node .nodeOutput
{
	text-align: right;
	margin-right: -10px;
	padding-right: 10px;
}

.nodeEditor .node .nodeInput .handle,
.nodeEditor .node .nodeOutput .handle
{
	content: "";
	display: block;
	width: 8px;
	height: 8px;
	background: #666;
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	border-radius: 100%;
	user-select: none;
	transition: 0.2s filter, 0.2s box-shadow;
}

.nodeEditor.variableDragged .node .nodeInput .handle,
.nodeEditor.variableDragged .node .nodeOutput .handle
{
	filter: brightness(0.5);
}

.nodeEditor.variableDragged .node .nodeInput.connected .handle,
.nodeEditor.variableDragged .node .nodeOutput.connected .handle
{
	filter: brightness(0.5) !important;
	box-shadow: none !important;
}

.nodeEditor.variableDragged .node .nodeInput.dragged .handle,
.nodeEditor.variableDragged .node .nodeOutput.dragged .handle
{
	filter: none;
}

.nodeEditor .node .nodeInput .handle
{
	left: -4px;
}

.nodeEditor .node .nodeOutput .handle
{
	right: -4px;
}

.nodeShelf
{
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	background: #ddd;
	padding: 10px;
}

.nodeShelf .nodeType
{
	width: 200px;
	box-sizing: border-box;
	background: #fff;
	border-radius: 6px;
	box-shadow: 0 0 1rem #0002;
	display: grid;
	grid-template-rows: auto 0fr;
	margin-bottom: 10px;
	transition: grid-template-rows 0.5s;
	overflow: hidden;
}
.nodeEditor .nodeType.expanded
{
	grid-template-rows: auto 1fr;
}

.nodeEditor .nodeType .nodeTitle
{
	padding: 10px;
	background: #eee;
	padding: 5px 10px;
	border-radius: 6px 6px 0 0;
	user-select: none;
}

.nodeEditor .nodeType .nodeDescription
{
	padding: 0 10px;
	box-sizing: border-box;
	overflow: hidden;
	transition: padding 0.5s;
}
.nodeEditor .nodeType.expanded .nodeDescription
{
	padding: 10px;
}
